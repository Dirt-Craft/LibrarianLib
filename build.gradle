plugins {
	id 'fabric-loom' version '0.2.0-SNAPSHOT' apply false
}

allprojects {
	apply plugin: 'fabric-loom'
	apply plugin: 'maven-publish'

	version = rootProject.mod_version
    if(project == rootProject) {
		archivesBaseName = rootProject.archives_base_name
		group = rootProject.maven_group
	} else {
		archivesBaseName = rootProject.archives_base_name + "-" + project.name
		group = rootProject.maven_group + "." + rootProject.archives_base_name
	}

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	sourceSets {
		main {
			java {
				srcDirs 'src/main/kotlin'
			}
		}
	}

	minecraft {
	}

	repositories {
		maven {
			url = "http://maven.fabricmc.net/"
			name = "Fabric"
		}
		maven {
			url = "https://kotlin.bintray.com/kotlinx"
			name = "Kotlin X"
		}
	}

	dependencies {
		//to change the versions see the gradle.properties file
		minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
		mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}"
		modCompile "net.fabricmc:fabric-loader:${rootProject.loader_version}"
		modCompile "net.fabricmc:fabric-language-kotlin:1.3.21+"
		compileOnly "net.fabricmc:fabric-language-kotlin:1.3.21+"

		// Fabric API. This is technically optional, but you probably want it anyway.
		modCompile "net.fabricmc:fabric:${rootProject.fabric_version}"
	}

	processResources {
		inputs.property "version", rootProject.version

		from(sourceSets.main.resources.srcDirs) {
			include "fabric.mod.json"
			expand "version": rootProject.version
		}

		from(sourceSets.main.resources.srcDirs) {
			exclude "fabric.mod.json"
		}
	}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}

	jar {
		from "LICENSE"
	}

// configure the maven publication
	publishing {
		publications {
			mavenJava(MavenPublication) {
				// add all the jars that should be included when publishing to maven
				artifact(jar) {
					builtBy remapJar
				}
				artifact(sourcesJar) {
					builtBy remapSourcesJar
				}
			}
		}

		// select the repositories you want to publish to
		repositories {
			// uncomment to publish to the local maven
			// mavenLocal()
		}
	}
}

repositories {
    maven {
        url = 'http://maven.modmuss50.me'
        name = "Modmuss50"
    }
}

dependencies {
	rootProject.subprojects.forEach {
		compile it
	}
	runtimeOnly 'io.github.prospector.modmenu:ModMenu:1.1.9-35'
}

